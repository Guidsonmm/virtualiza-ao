backend:
  extraEnvs:
  - name: DATABASE_CLIENT
    value: postgres
  - name: DATABASE_HOST
    value: strapi-foodadvisor-postgresql
  - name: DATABASE_PORT
    value: 5432
  - name: DATABASE_USERNAME
    value: strapi
  - name: DATABASE_PASSWORD
    value: strapi
  - name: DATABASE_NAME
    value: strapi

  replicaCount: 1
  image:
    repository: food-advisor-api
    pullPolicy: IfNotPresent
    tag: ""
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:

    create: true
    automount: true
    annotations: {}
    name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}

  securityContext: {}

  service:

    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []


  resources: {}

  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80


  volumes: []

  volumeMounts: []


  nodeSelector: {}

  tolerations: []

  affinity: {}

frontend:
  extraEnvs:
  - name: DATABASE_CLIENT
    value: postgres
  - name: DATABASE_HOST
    value: strapi-foodadvisor-postgresql
  - name: DATABASE_PORT
    value: 5432
  - name: DATABASE_USERNAME
    value: strapi
  - name: DATABASE_PASSWORD
    value: strapi
  - name: DATABASE_NAME
    value: strapi

  replicaCount: 1
  image:
    repository: food-advisor-client
    pullPolicy: IfNotPresent
    tag: ""
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:

    create: true
    automount: true
    annotations: {}
    name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}

  securityContext: {}

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []


  resources: {}

  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80


  volumes: []
  volumeMounts: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

postgresql:
  auth:
    database: strapi
    password: strapi
    username: strapi
